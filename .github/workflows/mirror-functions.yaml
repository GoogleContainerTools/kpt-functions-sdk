name: mirror-functions

on:
  push:
    branches:
      - "*"
  schedule:
    - cron: "0 18 * * *"

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Set up gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "275.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: gcloud auth configure-docker
      - name: Mirror kpt-functions images
        env:
          PROJECT_ID: kpt-functions
        run: |
          declare -A kptFunctionsImages=(["read-yaml"]="read-yaml" ["write-yaml"]="write-yaml" ["gatekeeper-validate"]="policy-controller-validate")
          for image in ${!kptFunctionsImages[@]}; do
            docker pull gcr.io/${PROJECT_ID}/${image}:latest
            docker tag gcr.io/${PROJECT_ID}/${image}:latest gcr.io/config-management-release/${kptFunctionsImages[$image]}:latest
            docker tag gcr.io/${PROJECT_ID}/${image}:latest gcr.io/config-management-release/${kptFunctionsImages[$image]}:stable
            docker push gcr.io/config-management-release/${kptFunctionsImages[$image]}:latest
            docker push gcr.io/config-management-release/${kptFunctionsImages[$image]}:stable
          done
      - name: Mirror kpt-dev images
        env:
          PROJECT_ID: kpt-dev
        run: |
          declare -A kptDevImages=(["kpt"]="kpt")
          for image in ${!kptDevImages[@]}; do
            docker pull gcr.io/${PROJECT_ID}/${image}:latest
            docker tag gcr.io/${PROJECT_ID}/${image}:latest gcr.io/config-management-release/${kptDevImages[$image]}:latest
            docker tag gcr.io/${PROJECT_ID}/${image}:latest gcr.io/config-management-release/${kptDevImages[$image]}:stable
            docker push gcr.io/config-management-release/${kptDevImages[$image]}:latest
            docker push gcr.io/config-management-release/${kptDevImages[$image]}:stable
          done

