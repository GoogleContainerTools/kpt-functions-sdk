apiVersion: v1
kind: List
items:
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    name: fulfillmentcenters.foo-corp.com
    annotations:
      config.kubernetes.io/path: >-
        foo-corp-1.0.0/customresourcedefinition_fulfillmentcenters.foo-corp.com.yaml
      config.kubernetes.io/index: '0'
  spec:
    group: foo-corp.com
    names:
      kind: FulfillmentCenter
      plural: fulfillmentcenters
      singular: fulfillmentcenter
    scope: Namespaced
    validation:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              address:
                type: string
            required:
            - address
            type: object
    versions:
    - name: v1
      served: true
      storage: false
    - name: v2
      served: true
      storage: true
- apiVersion: foo-corp.com/v1
  kind: FulfillmentCenter
  metadata:
    name: production
    namespace: shipping-prod
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-prod/fulfillmentcenter_production.yaml
      config.kubernetes.io/index: '0'
  spec:
    address: 100 Industry St.
- apiVersion: foo-corp.com/v1
  kind: FulfillmentCenter
  metadata:
    name: staging
    namespace: shipping-staging
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-staging/fulfillmentcenter_staging.yaml
      config.kubernetes.io/index: '0'
  spec:
    address: 100 Main St.
- apiVersion: policy/v1beta1
  kind: PodSecurityPolicy
  metadata:
    name: psp
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/podsecuritypolicy_psp.yaml
      config.kubernetes.io/index: '0'
  spec:
    fsGroup:
      rule: RunAsAny
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: namespace-reader
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/clusterrole_namespace-reader.yaml
      config.kubernetes.io/index: '0'
  rules:
  - apiGroups:
    - ''
    resources:
    - namespaces
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: pod-creator
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/clusterrole_pod-creator.yaml
      config.kubernetes.io/index: '0'
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: namespace-readers
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/clusterrolebinding_namespace-readers.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: namespace-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: cheryl@foo-corp.com
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: job-creator
    namespace: shipping-dev
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-dev/rolebinding_job-creators.yaml
      config.kubernetes.io/index: '0'
  rules:
  - apiGroups:
    - batch/v1
    resources:
    - jobs
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: viewers
    namespace: audit
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/audit/rolebinding_viewers.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: 'system:serviceaccounts:audit'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: job-creators
    namespace: shipping-dev
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-dev/rolebinding_job-creators.yaml
      config.kubernetes.io/index: '1'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: job-creator
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: sam@foo-corp.com
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: pod-creators
    namespace: shipping-dev
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-dev/rolebinding_pod-creators.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: pod-creator
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: bob@foo-corp.com
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: viewers
    namespace: shipping-dev
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-dev/rolebinding_viewers.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: 'system:serviceaccounts:audit'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: pod-creators
    namespace: shipping-prod
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-prod/rolebinding_pod-creators.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: pod-creator
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: bob@foo-corp.com
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: sre-admin
    namespace: shipping-prod
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-prod/rolebinding_sre-admin.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: sre@foo-corp.com
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: viewers
    namespace: shipping-prod
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-prod/rolebinding_viewers.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: 'system:serviceaccounts:audit'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: pod-creators
    namespace: shipping-staging
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-staging/rolebinding_pod-creators.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: pod-creator
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: bob@foo-corp.com
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: viewers
    namespace: shipping-staging
    annotations:
      config.kubernetes.io/path: foo-corp-1.0.0/shipping-staging/rolebinding_viewers.yaml
      config.kubernetes.io/index: '0'
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: 'system:serviceaccounts:audit'
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    labels:
      nomos-namespace-type: workload
    name: config-management-resource-quota
    namespace: shipping-dev
    annotations:
      config.kubernetes.io/path: >-
        foo-corp-1.0.0/shipping-dev/resourcequota_config-management-resource-quota.yaml
      config.kubernetes.io/index: '0'
  spec:
    hard:
      cpu: 100m
      memory: 100Mi
      pods: '1'
